{
  "version": 3,
  "sources": ["../../../../../../../apps/auth/src/controllers/user.controller.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport passport, { AuthenticateOptions } from \"passport\"; \nimport {Request , Response , NextFunction} from \"express\"; \n\nimport { ApiResponse, Apperror } from \"@auth/utils\";\n\ninterface AuthOptions extends AuthenticateOptions{\n    accessType? : string,\n    approvalPrompt? : string\n}\n\nconst authGoogle = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        passport.authenticate('google', {\n            scope: [\"profile\" ,\"email\",\"https://www.googleapis.com/auth/gmail.compose\"],\n            accessType: 'offline',\n            approvalPrompt: 'force'\n        } as AuthOptions)(req , res , next);\n        //     passport.authenticate('google', {\n        //         scope:\n        //             ['email', 'profile']\n        //     }\n        // )(req,res , next);\n    }\n     catch (error: any) {\n        return next(new Apperror(error.message, 400));\n    }\n}\n\nconst googleCallback  =  (req : Request ,res : Response , next : NextFunction ) => {\n    try {\n        \n        passport.authenticate(\"google\", {\n            successRedirect: `${process.env.DOMAIN}/api/v1/user/auth/google/success`,\n            failureRedirect: `${process.env.DOMAIN}/api/v1/user/auth/google/failure`,\n        })(req, res, next);\n    } catch (error : any) {\n        return next(new Apperror(error.message , 400));\n    }\n}\n\nconst googleSuccess = (req : any , res : Response , next : NextFunction ) => {\n    try {\n        console.log(req.user)   \n        res.redirect(`${process.env.CLIENT_URL}`)\n    } catch (error : any) {\n        return next (new Apperror(error.message , 400));\n    }\n}\n\n\n\nconst googleFailure = (  req : Request, res : Response , next : NextFunction ) => {\n    return next (new Apperror(\"You are not authenticated\" , 400));\n}\n\n\n// interface RequestWithSession extends Request {\n//     logout(arg0: (err: Error) => void): unknown;\n//     user: any;\n//     session: session.Session & Partial<session.SessionData> & { user?: any };\n//   }\nconst logout = (req: any, res: Response, next: NextFunction) => {\n    try {\n        if (req.session) {\n            req.session.destroy((err: Error) => {\n              if (err) {\n                console.log(err);\n              }\n              req.user = undefined;\n            });\n            req.logout((err: Error) => {\n                if (err) {\n                    console.log(err);\n                }\n            });\n            return new ApiResponse(res , 200 , \"Success\" , {message : \"You are logged out\"});\n          } else {\n            req.logout((err: Error) => {\n              if (err) {\n                console.log(err);\n              }\n            });\n            return new ApiResponse(res , 200 , \"Success\" , {message : \"You are logged out\"});\n          }  \n    } catch (error : any) {\n        return next(new Apperror(error.message , 400));\n    }\n}\n\n\n\nconst getUserData = (req : any , res : Response, next : NextFunction ) => { \n    try {\n        if(req.user) {\n            console.log(req.user) ;\n            const user = req.user;\n            const data = {\n                name : user.name,\n                email : user.email,\n                googleId : user.googleId\n            }\n            return new ApiResponse(res , 200 , \"Success\" , data);\n        }else{\n            return new ApiResponse(res , 400 , \"failure\" , {message : \"No user data\"});\n        }\n    } catch (error :any) {\n        return next(new Apperror(error.message , 400));\n    }\n}\n\nexport  {\n    authGoogle , googleCallback ,\n    googleSuccess , googleFailure ,\n    logout , getUserData\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,sBAA8C;AAG9C,mBAAsC;AAOtC,MAAM,aAAa,OAAO,KAAc,KAAe,SAAuB;AAC1E,MAAI;AACA,oBAAAA,QAAS,aAAa,UAAU;AAAA,MAC5B,OAAO,CAAC,WAAW,SAAQ,+CAA+C;AAAA,MAC1E,YAAY;AAAA,MACZ,gBAAgB;AAAA,IACpB,CAAgB,EAAE,KAAM,KAAM,IAAI;AAAA,EAMtC,SACQ,OAAY;AAChB,WAAO,KAAK,IAAI,sBAAS,MAAM,SAAS,GAAG,CAAC;AAAA,EAChD;AACJ;AAEA,MAAM,iBAAmB,CAAC,KAAe,KAAiB,SAAyB;AAC/E,MAAI;AAEA,oBAAAA,QAAS,aAAa,UAAU;AAAA,MAC5B,iBAAiB,GAAG,QAAQ,IAAI,MAAM;AAAA,MACtC,iBAAiB,GAAG,QAAQ,IAAI,MAAM;AAAA,IAC1C,CAAC,EAAE,KAAK,KAAK,IAAI;AAAA,EACrB,SAAS,OAAa;AAClB,WAAO,KAAK,IAAI,sBAAS,MAAM,SAAU,GAAG,CAAC;AAAA,EACjD;AACJ;AAEA,MAAM,gBAAgB,CAAC,KAAY,KAAiB,SAAyB;AACzE,MAAI;AACA,YAAQ,IAAI,IAAI,IAAI;AACpB,QAAI,SAAS,GAAG,QAAQ,IAAI,UAAU,EAAE;AAAA,EAC5C,SAAS,OAAa;AAClB,WAAO,KAAM,IAAI,sBAAS,MAAM,SAAU,GAAG,CAAC;AAAA,EAClD;AACJ;AAIA,MAAM,gBAAgB,CAAG,KAAe,KAAiB,SAAyB;AAC9E,SAAO,KAAM,IAAI,sBAAS,6BAA8B,GAAG,CAAC;AAChE;AAQA,MAAM,SAAS,CAAC,KAAU,KAAe,SAAuB;AAC5D,MAAI;AACA,QAAI,IAAI,SAAS;AACb,UAAI,QAAQ,QAAQ,CAAC,QAAe;AAClC,YAAI,KAAK;AACP,kBAAQ,IAAI,GAAG;AAAA,QACjB;AACA,YAAI,OAAO;AAAA,MACb,CAAC;AACD,UAAI,OAAO,CAAC,QAAe;AACvB,YAAI,KAAK;AACL,kBAAQ,IAAI,GAAG;AAAA,QACnB;AAAA,MACJ,CAAC;AACD,aAAO,IAAI,yBAAY,KAAM,KAAM,WAAY,EAAC,SAAU,qBAAoB,CAAC;AAAA,IACjF,OAAO;AACL,UAAI,OAAO,CAAC,QAAe;AACzB,YAAI,KAAK;AACP,kBAAQ,IAAI,GAAG;AAAA,QACjB;AAAA,MACF,CAAC;AACD,aAAO,IAAI,yBAAY,KAAM,KAAM,WAAY,EAAC,SAAU,qBAAoB,CAAC;AAAA,IACjF;AAAA,EACN,SAAS,OAAa;AAClB,WAAO,KAAK,IAAI,sBAAS,MAAM,SAAU,GAAG,CAAC;AAAA,EACjD;AACJ;AAIA,MAAM,cAAc,CAAC,KAAY,KAAgB,SAAyB;AACtE,MAAI;AACA,QAAG,IAAI,MAAM;AACT,cAAQ,IAAI,IAAI,IAAI;AACpB,YAAM,OAAO,IAAI;AACjB,YAAM,OAAO;AAAA,QACT,MAAO,KAAK;AAAA,QACZ,OAAQ,KAAK;AAAA,QACb,UAAW,KAAK;AAAA,MACpB;AACA,aAAO,IAAI,yBAAY,KAAM,KAAM,WAAY,IAAI;AAAA,IACvD,OAAK;AACD,aAAO,IAAI,yBAAY,KAAM,KAAM,WAAY,EAAC,SAAU,eAAc,CAAC;AAAA,IAC7E;AAAA,EACJ,SAAS,OAAY;AACjB,WAAO,KAAK,IAAI,sBAAS,MAAM,SAAU,GAAG,CAAC;AAAA,EACjD;AACJ;",
  "names": ["passport"]
}
