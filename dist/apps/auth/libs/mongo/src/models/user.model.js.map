{
  "version": 3,
  "sources": ["../../../../../../../libs/mongo/src/models/user.model.ts"],
  "sourcesContent": ["import mongoose, { ObjectId } from \"mongoose\";\n\nconst userModel = new  mongoose.Schema({\n    name : {\n        type : String,\n        required : true,\n        trim : true,\n        maxlength : 50\n    },\n    email  :{\n        type : String,\n        required : true,\n        trim : true,\n        maxlength : 50,\n        lowercase : true ,\n        unique : true ,\n        \n    }, \n    sub  : {\n        type : Number ,\n    }, \n    picture : {\n        type : String\n    \n    }, \n    domain :{\n        type : String ,\n        trim : true ,\n        maxlength : 50\n    \n    }, \n    googleId : {\n        type : String ,\n        trim : true ,\n        maxlength : 50\n    \n    },\n    acessToken : {\n        type : String,\n    },\n\n    rToken : {\n        type : String\n    },\n\n    emailSelected: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Email'\n    }]\n    \n});\n\nconst emailModel = new mongoose.Schema({\n    email : {\n        type : String,\n        maxlength : 50,\n        required : true,\n        trim : true\n    },\n    name : {\n        type : String,\n        maxlength : 50,\n        trim : true\n    },\n    currentDesignation : {\n        type : String,\n        maxlength : 50,\n        trim : true\n    },\n    addedOn :{\n        type : Date,\n        default : Date.now()\n    }\n})\ninterface userI extends mongoose.Document {\n    _id :ObjectId, \n    name: string;\n    email: string;\n    sub?: number;\n    picture?: string;\n    domain?: string;\n    googleId?: string;\n    acessToken? : string\n    rToken? : string,\n    id?:string,\n    emailSelected? : mongoose.Schema.Types.ObjectId[] | null\n}\n\ninterface emailI extends mongoose.Document {\n    email: string;\n    name?: string;\n    currentDesignation?: string;\n    addedOn?: Date;\n}\n\n\ntype userInterface = userI;\ntype emailInterface = emailI;\n\nconst User  =  mongoose.model(\"User\" , userModel) ;\nconst Email = mongoose.model(\"Email\" , emailModel);\nexport { User , Email ,userInterface , emailInterface} ;   "],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmC;AAEnC,MAAM,YAAY,IAAK,gBAAAA,QAAS,OAAO;AAAA,EACnC,MAAO;AAAA,IACH,MAAO;AAAA,IACP,UAAW;AAAA,IACX,MAAO;AAAA,IACP,WAAY;AAAA,EAChB;AAAA,EACA,OAAQ;AAAA,IACJ,MAAO;AAAA,IACP,UAAW;AAAA,IACX,MAAO;AAAA,IACP,WAAY;AAAA,IACZ,WAAY;AAAA,IACZ,QAAS;AAAA,EAEb;AAAA,EACA,KAAO;AAAA,IACH,MAAO;AAAA,EACX;AAAA,EACA,SAAU;AAAA,IACN,MAAO;AAAA,EAEX;AAAA,EACA,QAAQ;AAAA,IACJ,MAAO;AAAA,IACP,MAAO;AAAA,IACP,WAAY;AAAA,EAEhB;AAAA,EACA,UAAW;AAAA,IACP,MAAO;AAAA,IACP,MAAO;AAAA,IACP,WAAY;AAAA,EAEhB;AAAA,EACA,YAAa;AAAA,IACT,MAAO;AAAA,EACX;AAAA,EAEA,QAAS;AAAA,IACL,MAAO;AAAA,EACX;AAAA,EAEA,eAAe,CAAC;AAAA,IACZ,MAAM,gBAAAA,QAAS,OAAO,MAAM;AAAA,IAC5B,KAAK;AAAA,EACT,CAAC;AAEL,CAAC;AAED,MAAM,aAAa,IAAI,gBAAAA,QAAS,OAAO;AAAA,EACnC,OAAQ;AAAA,IACJ,MAAO;AAAA,IACP,WAAY;AAAA,IACZ,UAAW;AAAA,IACX,MAAO;AAAA,EACX;AAAA,EACA,MAAO;AAAA,IACH,MAAO;AAAA,IACP,WAAY;AAAA,IACZ,MAAO;AAAA,EACX;AAAA,EACA,oBAAqB;AAAA,IACjB,MAAO;AAAA,IACP,WAAY;AAAA,IACZ,MAAO;AAAA,EACX;AAAA,EACA,SAAS;AAAA,IACL,MAAO;AAAA,IACP,SAAU,KAAK,IAAI;AAAA,EACvB;AACJ,CAAC;AA0BD,MAAM,OAAS,gBAAAA,QAAS,MAAM,QAAS,SAAS;AAChD,MAAM,QAAQ,gBAAAA,QAAS,MAAM,SAAU,UAAU;",
  "names": ["mongoose"]
}
