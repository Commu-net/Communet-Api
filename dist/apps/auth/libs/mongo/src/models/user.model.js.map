{
  "version": 3,
  "sources": ["../../../../../../../libs/mongo/src/models/user.model.ts"],
  "sourcesContent": ["import mongoose, { ObjectId } from \"mongoose\";\r\n\r\nconst userModel = new  mongoose.Schema({\r\n    name : {\r\n        type : String,\r\n        required : true,\r\n        trim : true,\r\n        maxlength : 50\r\n    },\r\n    email  :{\r\n        type : String,\r\n        required : true,\r\n        trim : true,\r\n        maxlength : 50,\r\n        lowercase : true ,\r\n        unique : true ,\r\n        \r\n    }, \r\n    sub  : {\r\n        type : Number ,\r\n    }, \r\n    picture : {\r\n        type : String\r\n    \r\n    }, \r\n    domain :{\r\n        type : String ,\r\n        trim : true ,\r\n        maxlength : 50\r\n    \r\n    }, \r\n    googleId : {\r\n        type : String ,\r\n        trim : true ,\r\n        maxlength : 50\r\n    \r\n    },\r\n    acessToken : {\r\n        type : String,\r\n    },\r\n\r\n    rToken : {\r\n        type : String\r\n    },\r\n\r\n    emailSelected: [{\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'Email'\r\n    }]\r\n    \r\n});\r\n\r\nconst emailModel = new mongoose.Schema({\r\n    email : {\r\n        type : String,\r\n        maxlength : 50,\r\n        required : true,\r\n        trim : true\r\n    },\r\n    name : {\r\n        type : String,\r\n        maxlength : 50,\r\n        trim : true\r\n    },\r\n    currentDesignation : {\r\n        type : String,\r\n        maxlength : 50,\r\n        trim : true\r\n    },\r\n    addedOn :{\r\n        type : Date,\r\n        default : Date.now()\r\n    }\r\n})\r\ninterface userI extends mongoose.Document {\r\n    _id :ObjectId, \r\n    name: string;\r\n    email: string;\r\n    sub?: number;\r\n    picture?: string;\r\n    domain?: string;\r\n    googleId?: string;\r\n    acessToken? : string\r\n    rToken? : string,\r\n    id?:string,\r\n    emailSelected? : mongoose.Schema.Types.ObjectId[] | null\r\n}\r\n\r\ninterface emailI extends mongoose.Document {\r\n    email: string;\r\n    name?: string;\r\n    currentDesignation?: string;\r\n    addedOn?: Date;\r\n}\r\n\r\n\r\ntype userInterface = userI;\r\ntype emailInterface = emailI;\r\n\r\nconst User  =  mongoose.model(\"User\" , userModel) ;\r\nconst Email = mongoose.model(\"Email\" , emailModel);\r\nexport { User , Email ,userInterface , emailInterface} ;   "],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmC;AAEnC,MAAM,YAAY,IAAK,gBAAAA,QAAS,OAAO;AAAA,EACnC,MAAO;AAAA,IACH,MAAO;AAAA,IACP,UAAW;AAAA,IACX,MAAO;AAAA,IACP,WAAY;AAAA,EAChB;AAAA,EACA,OAAQ;AAAA,IACJ,MAAO;AAAA,IACP,UAAW;AAAA,IACX,MAAO;AAAA,IACP,WAAY;AAAA,IACZ,WAAY;AAAA,IACZ,QAAS;AAAA,EAEb;AAAA,EACA,KAAO;AAAA,IACH,MAAO;AAAA,EACX;AAAA,EACA,SAAU;AAAA,IACN,MAAO;AAAA,EAEX;AAAA,EACA,QAAQ;AAAA,IACJ,MAAO;AAAA,IACP,MAAO;AAAA,IACP,WAAY;AAAA,EAEhB;AAAA,EACA,UAAW;AAAA,IACP,MAAO;AAAA,IACP,MAAO;AAAA,IACP,WAAY;AAAA,EAEhB;AAAA,EACA,YAAa;AAAA,IACT,MAAO;AAAA,EACX;AAAA,EAEA,QAAS;AAAA,IACL,MAAO;AAAA,EACX;AAAA,EAEA,eAAe,CAAC;AAAA,IACZ,MAAM,gBAAAA,QAAS,OAAO,MAAM;AAAA,IAC5B,KAAK;AAAA,EACT,CAAC;AAEL,CAAC;AAED,MAAM,aAAa,IAAI,gBAAAA,QAAS,OAAO;AAAA,EACnC,OAAQ;AAAA,IACJ,MAAO;AAAA,IACP,WAAY;AAAA,IACZ,UAAW;AAAA,IACX,MAAO;AAAA,EACX;AAAA,EACA,MAAO;AAAA,IACH,MAAO;AAAA,IACP,WAAY;AAAA,IACZ,MAAO;AAAA,EACX;AAAA,EACA,oBAAqB;AAAA,IACjB,MAAO;AAAA,IACP,WAAY;AAAA,IACZ,MAAO;AAAA,EACX;AAAA,EACA,SAAS;AAAA,IACL,MAAO;AAAA,IACP,SAAU,KAAK,IAAI;AAAA,EACvB;AACJ,CAAC;AA0BD,MAAM,OAAS,gBAAAA,QAAS,MAAM,QAAS,SAAS;AAChD,MAAM,QAAQ,gBAAAA,QAAS,MAAM,SAAU,UAAU;",
  "names": ["mongoose"]
}
